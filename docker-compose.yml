version: "2"

services:

  apache:
    container_name: "${PROJECT_NAME}_apache"
    image: wodby/apache:$APACHE_TAG
    depends_on:
      - php
    environment:
      APACHE_LOG_LEVEL: info
      APACHE_BACKEND_HOST: php
      APACHE_VHOST_PRESET: php
      APACHE_DOCUMENT_ROOT: /var/www/html/web
    labels:
      - 'traefik.enable=true'
      - 'traefik.backend=${PROJECT_NAME}_apache'
      - 'traefik.port=80'
      - 'traefik.frontend.rule=Host:${PROJECT_BASE_URL}'
    volumes:
      - $PROJECT_DOCROOT:/var/www/html
    networks:
      - app-tier

  database:
    container_name: "${PROJECT_NAME}_database"
    image: wodby/mariadb:$MARIADB_TAG
    stop_grace_period: 30s
    env_file:
      - docker-conf/mariadb.env
    environment:
      MYSQL_ROOT_PASSWORD: $DB_ROOT_PASSWORD
      MYSQL_DATABASE: $DB_NAME
      MYSQL_USER: $DB_USER
      MYSQL_PASSWORD: $DB_PASSWORD
    networks:
      - app-tier

  php:
    container_name: "${PROJECT_NAME}_php"
    image: wodby/php:$PHP_TAG
    env_file:
      - docker-conf/phpfpm.env
    environment:
      ENV_TYPE: 'PROD'
      COLUMNS: 80 # Set 80 columns for docker exec -it.
      PHP_FPM_CLEAR_ENV: "no"
      MYSQL_DATABASE: $DB_NAME
      MYSQL_HOSTNAME: $DB_HOST
      MYSQL_PASSWORD: $DB_PASSWORD
      MYSQL_PORT: $DB_PORT
      MYSQL_USER: $DB_USER
    volumes:
      - $PROJECT_DOCROOT:/var/www/html
    networks:
      - app-tier

  redis:
    container_name: "${PROJECT_NAME}_redis"
    image: wodby/redis:$REDIS_TAG
    env_file:
      - docker-conf/redis.env
    networks:
      - app-tier

  solr:
    container_name: "${PROJECT_NAME}_solr"
    image: wodby/solr:$SOLR_TAG
    environment:
      SOLR_DEFAULT_CONFIG_SET: $SOLR_CONFIG_SET
      SOLR_HEAP: 1024m
    volumes:
      - ./docker-conf/solr_7.x_config:/opt/docker-solr/configsets/agid/conf
    labels:
      - 'traefik.enable=true'
      - 'traefik.backend=${PROJECT_NAME}_solr'
      - 'traefik.port=8983'
      - 'traefik.frontend.rule=Host:solr.${PROJECT_BASE_URL}'
    networks:
      - app-tier

  traefik:
      container_name: "${PROJECT_NAME}_traefik"
      image: traefik:v1.7
      command: |-
        --api
        --api.dashboard=true
        --debug=false
        --loglevel=ERROR
        --retry
        --defaultentrypoints=http,https
        --entryPoints='Name:traefik Address::${TRAEFIK_DASHBOARD_PORT} Auth.Basic.Users:${TRAEFIK_DASHBOARD_USER}:${TRAEFIK_DASHBOARD_PASSWORD}'
        --entryPoints='Name:http Address::80 Redirect.EntryPoint:https'
        --entryPoints='Name:https Address::443 TLS'
        --docker
        --docker.endpoint="unix:///var/run/docker.sock"
        --docker.domain=${TRAEFIK_DOMAIN}
        --docker.watch=true
        --docker.exposedbydefault=false
        --acme
        --acme.email=${TRAEFIK_ACME_EMAIL}
        --acme.entrypoint=https
        --acme.httpchallenge.entrypoint=http
        --acme.storage=acme.json
        --acme.onhostrule=true
      labels:
        - traefik.docker.network=app-tier
      env_file:
        - .env
      ports:
        - 80:80
        - 443:443
        - ${TRAEFIK_DASHBOARD_PORT}:${TRAEFIK_DASHBOARD_PORT}
      volumes:
        - /var/run/docker.sock:/var/run/docker.sock
        - /data/traefik/acme.json:/acme.json
      networks:
        - app-tier

networks:
  app-tier:
    driver: bridge
    driver_opts:
      com.docker.network.driver.mtu: 1450
