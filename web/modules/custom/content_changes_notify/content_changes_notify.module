<?php

/**
 * @file
 * Contains content_changes_notify.module.
 */

use Drupal\Core\Routing\RouteMatchInterface;

/**
 * Implements hook_help().
 */
function content_changes_notify_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    // Main module help for the content_changes_notify module.
    case 'help.page.content_changes_notify':
      $output = '';
      $output .= '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('Implements the possibiliy to choose on which content&#039;s changes which one (configurable)  users will be notified through mail') . '</p>';
      return $output;

    default:
  }
}

/**
 * Implements hook_entity_presave().
 */
function content_changes_notify_entity_presave(Drupal\Core\Entity\EntityInterface $entity) {
  $config = \Drupal::config('content_changes_notify.settings');
  $enabledTypes = $config->get('types');
  $enabledMails = $config->get('emails') !== null ? explode(PHP_EOL, $config->get('emails')) : [];

  if (in_array($entity->bundle(), $enabledTypes + ['page'], TRUE))  {
    $mailManager = \Drupal::service('plugin.manager.mail');

    foreach ($enabledMails as $mail) {
      // Get parsed mail text and title
      $titleValue = $config->get('title');
      $messageValue = $config->get('message');
      if (!empty($messageValue)) {
        $tokenService = \Drupal::token();
        $title = $tokenService->replace($titleValue, ['node' => $entity]);
        $message = $tokenService->replace($messageValue['value'], ['node' => $entity]);
        $mailManager->mail('content_changes_notify',   'notify', $mail, 'it', [ 'title' => $title, 'message' => $message, ], NULL, true);
      }
    }
  }
}

/**
 * Implements hook_mail().
 */
function content_changes_notify_mail($key, &$message, $params) {
 switch ($key) {
   case 'notify':
     $message['from'] = \Drupal::config('system.site')->get('mail');
     $message['subject'] = $params['title'];
     $message['body'][] = $params['message'];
     break;
 }
}
